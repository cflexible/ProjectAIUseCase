{"variants":[{"paths":["\/tutorials\/hotelchatbot\/howtoadjust"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"kind":"hero","title":"Essential steps for adjusting the chatbot.","chapter":"How to adjust the app","estimatedTimeInMinutes":10,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The following steps describe what need to do to improve the chatbot and to adjust it to own needs"},{"type":"text","text":" "},{"type":"text","text":"There are the following steps necessary:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Adjust the BaseData.plist file to your needs, by adding more rooms, defining more questions."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Optional adjust the core data model in HotelChatbotModel.xcdatamodel."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create machine learning files."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create the models"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Put the models into the app."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add special functionality into ChatController class."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"\/\/ @Image(source: BaseDataPlistPartview.png, alt: “Part view of the BaseData.plist file for workflow and other definitions.”)"}]}]},{"kind":"tasks","tasks":[{"anchor":"Check-the-database-objects","title":"Check the database objects","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"First you should think about the information you want to have from the guest."},{"type":"text","text":" "},{"type":"text","text":"Perhaps it is important to you to know if he wants to named by a neutral gend."},{"type":"text","text":" "},{"type":"text","text":"For those things you have to define the attributes associated with the Booking object."},{"type":"text","text":" "},{"type":"text","text":"Every attribute which is not optional is checked by the ChatController."}]}],"mediaPosition":"trailing","media":"BookingClassdiagram.png"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add attributes or other entities to the Booking entity. Define attributes as non optional to use for to fill by the chatbot."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"CoredataModel.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add questions to the BaseData.plist file to control the workflow and to load them at app start into the database."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"BaseDataPlistPartview.png"}]},{"anchor":"Create-ML-models","title":"Create ML models","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"After you know ahat you want to have, you must create training and test data for creating Natural Language Processing (NLP)"},{"type":"text","text":" "},{"type":"text","text":"models. You need a set of classifier sentences and a set of sentences slitt into words and tag each word with a tag."},{"type":"text","text":" "},{"type":"text","text":"With the classifier the chat controller can identify which information is in the sentence."}]}],"mediaPosition":"trailing","media":"create-ml-96x96_2x.png"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a file for training a sentence classifier model."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"ClassifierExampleFile.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a file for training a word tagging model."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"TaggingExampleFile.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create the models model, a classifier model and a tagging model each for each supported language."},{"type":"text","text":" "},{"type":"text","text":"Drag and drop the model into the XCode project."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"CreateMLExample.png"},{"code":"ChatControllerModelDefinition.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Reference the model version in the ‘ChatController’. The models should have names like the next example where _en is for the language and 1 is the version number:"},{"type":"text","text":" "},{"type":"text","text":"‘HotelChatBotTagger_en 1.mlmodel’"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Add-missing-functionality","title":"Add missing functionality","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For using the NLP analysis there is a need for additional functions. For example for getting mail adresses it is enough to know that in the text is an address"},{"type":"text","text":" "},{"type":"text","text":"but in the next step you don’t use word tagging. Instead you use a regex to get the address."}]}],"mediaPosition":"trailing","media":"swift-og.png"}],"stepsSection":[{"code":"ChatControllerTextAnalysis.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Program the functionality for analysing the texts."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/HotelChatBot\/RetrainModels","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"What to do for improving the quality of the chatbot","abstract":[{"type":"text","text":"A good ML model is trained from a large set of samples. So a developer is not able to create such a hugh"},{"type":"text","text":" "},{"type":"text","text":"set. For this the app collects all the user input and creates training and testfiles when the app will terminate."},{"type":"text","text":" "},{"type":"text","text":"The disandvantage is that the end of the program is slow with a big set of data but this is only for the POC."},{"type":"text","text":" "},{"type":"text","text":"In a real world you have that in the background system and the user does not recognize that."},{"type":"text","text":" "},{"type":"text","text":"The created files can be used for retrain the models."}]}],"identifier":{"url":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/HotelChatBot\/HowToAdjust","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Essential steps for adjusting the chatbot.","categoryPathComponent":"Tutorial-Table-of-Contents","role":"project","category":"There is a developer tutorial"},"hierarchy":{"modules":[{"reference":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/Tutorial-Table-of-Contents\/How-to-adjust-the-app","projects":[{"reference":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/HotelChatBot\/HowToAdjust","sections":[{"kind":"task","reference":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/HotelChatBot\/HowToAdjust#Check-the-database-objects"},{"kind":"task","reference":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/HotelChatBot\/HowToAdjust#Create-ML-models"},{"kind":"task","reference":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/HotelChatBot\/HowToAdjust#Add-missing-functionality"}]}]},{"reference":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/Tutorial-Table-of-Contents\/Train-the-app","projects":[{"reference":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/HotelChatBot\/RetrainModels","sections":[{"kind":"task","reference":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/HotelChatBot\/RetrainModels#Check-the-training-files"}]}]}],"reference":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/Tutorial-Table-of-Contents","paths":[["doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/Tutorial-Table-of-Contents","doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/Tutorial-Table-of-Contents\/$volume","doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/Tutorial-Table-of-Contents\/How-to-adjust-the-app"],["doc:\/\/org.luenstedt.HotelChatBot\/documentation\/HotelChatBot"]]},"references":{"ChatControllerModelDefinition.swift":{"syntax":"swift","content":["\/\/","\/\/  ChatController.swift","\/\/  HotelChatBot","\/\/","\/\/  Created by Jens Lünstedt on 24.02.23.","\/\/","","import Cocoa","import CoreML","import NaturalLanguage","","\/** The ChatController class is the main function class of the application where the input of a hotel guest is analyzed."," The most important thing is getting the questions to present to the guest which are dependend on the Booking"," object in which the data will be stored. Automaticcally dependend on open (unfilled) necessary attributes, the"," next question is selected.","*\/","class ChatController: NSObject {","    \/\/\/ The classifierModel holds the model for classifying the texts. It should use a language dependend model.","    static var classifierModel: NLModel?","    \/\/\/ The taggerModel holds the model for tagging the text words. It should use a language dependend model.","    static var taggerModel: NLModel?","    ","    \/\/\/ A variable to set the classifier model version when it is selected.","    static let classifierVersion = \"4\"","    \/\/\/ A variable to set the tagger model version when it is selected.","    static let taggerVersion     = \"4\"","    ..."],"fileName":"ChatController.swift","identifier":"ChatControllerModelDefinition.swift","type":"file","fileType":"swift","highlights":[]},"doc://org.luenstedt.HotelChatBot/tutorials/Tutorial-Table-of-Contents/Train-the-app":{"role":"article","title":"Train the app","abstract":[],"identifier":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/Tutorial-Table-of-Contents\/Train-the-app","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/train-the-app"},"doc://org.luenstedt.HotelChatBot/tutorials/HotelChatBot/RetrainModels#Check-the-training-files":{"role":"pseudoSymbol","title":"Check the training files","abstract":[{"type":"text","text":"A good ML model is trained from a large set of samples. So a developer is not able to create such a hugh"},{"type":"text","text":" "},{"type":"text","text":"set. For this the app collects all the user input and creates training and testfiles when the app will terminate."},{"type":"text","text":" "},{"type":"text","text":"The disandvantage is that the end of the program is slow with a big set of data but this is only for the POC."},{"type":"text","text":" "},{"type":"text","text":"In a real world you have that in the background system and the user does not recognize that."},{"type":"text","text":" "},{"type":"text","text":"The created files can be used for retrain the models."}],"identifier":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/HotelChatBot\/RetrainModels#Check-the-training-files","kind":"section","type":"section","url":"\/tutorials\/hotelchatbot\/retrainmodels#Check-the-training-files"},"swift-og.png":{"alt":"Swift symbol","type":"image","identifier":"swift-og.png","variants":[{"url":"\/images\/swift-og.png","traits":["1x","light"]}]},"CoredataModel.png":{"alt":"The core data model","type":"image","identifier":"CoredataModel.png","variants":[{"url":"\/images\/CoredataModel.png","traits":["1x","light"]}]},"doc://org.luenstedt.HotelChatBot/tutorials/HotelChatBot/HowToAdjust#Add-missing-functionality":{"role":"pseudoSymbol","title":"Add missing functionality","abstract":[{"type":"text","text":"The following steps describe what need to do to improve the chatbot and to adjust it to own needs"},{"type":"text","text":" "},{"type":"text","text":"There are the following steps necessary:"}],"identifier":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/HotelChatBot\/HowToAdjust#Add-missing-functionality","kind":"section","type":"section","url":"\/tutorials\/hotelchatbot\/howtoadjust#Add-missing-functionality"},"BookingClassdiagram.png":{"alt":"Part from the class diagram","type":"image","identifier":"BookingClassdiagram.png","variants":[{"url":"\/images\/BookingClassdiagram.png","traits":["1x","light"]}]},"doc://org.luenstedt.HotelChatBot/tutorials/HotelChatBot/HowToAdjust#Create-ML-models":{"role":"pseudoSymbol","title":"Create ML models","abstract":[{"type":"text","text":"The following steps describe what need to do to improve the chatbot and to adjust it to own needs"},{"type":"text","text":" "},{"type":"text","text":"There are the following steps necessary:"}],"identifier":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/HotelChatBot\/HowToAdjust#Create-ML-models","kind":"section","type":"section","url":"\/tutorials\/hotelchatbot\/howtoadjust#Create-ML-models"},"doc://org.luenstedt.HotelChatBot/tutorials/Tutorial-Table-of-Contents":{"role":"overview","title":"Introduction to the tutorials","abstract":[{"type":"text","text":"There is just one tutorial to adjust the app to your own needs."}],"identifier":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/Tutorial-Table-of-Contents","kind":"overview","type":"topic","url":"\/tutorials\/tutorial-table-of-contents"},"doc://org.luenstedt.HotelChatBot/tutorials/HotelChatBot/HowToAdjust":{"role":"project","title":"Essential steps for adjusting the chatbot.","estimatedTime":"10min","abstract":[{"type":"text","text":"The following steps describe what need to do to improve the chatbot and to adjust it to own needs"},{"type":"text","text":" "},{"type":"text","text":"There are the following steps necessary:"}],"identifier":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/HotelChatBot\/HowToAdjust","kind":"project","type":"topic","url":"\/tutorials\/hotelchatbot\/howtoadjust"},"ChatControllerTextAnalysis.swift":{"syntax":"swift","content":["...","\/**"," This is the main function of analysing the texts. Here we get one sentence. So we can first analyse the kind"," of the sentence before we analyse the content of the sentence.","*\/","static private func analyseSentence(text: String) -> String {","    #if DEBUG","        NSLog(\"\\(type(of: self)) \\(#function)()\")","    #endif","","    \/\/ If we miss a model we return","    if classifierModel == nil || taggerModel == nil {","        return String(\"I'm sorry but I miss a NLP model, please ask the developer.\")","    }","","    let baseErrormessage = Translations().getTranslation(text: \"We are sorry but I did not understand you.<br>\")","    ","    var classifierLabel = classifierModel!.predictedLabel(for: text)","    \/\/ We remember the text","    ClassifierHelper.addText(language: currentLanguage, text: text, classifierString: classifierLabel)","    print(\"Found classifier: \\(classifierLabel ?? \"\")\")","    if [\"hasEnglishDates\", \"hasGermanDates\", \"hasUSDates\"].contains(classifierLabel) {","        classifierLabel = \"hasDates\"","    }","    ","    switch classifierLabel {","    case \"hasNames\":","        if workBooking.guest?.firstname?.count ?? 0 > 0 && workBooking.guest?.lastname?.count ?? 0 > 0 {","            return baseErrormessage + Translations().getTranslation(text: workflows[askedQuestion].negativeAnswer ?? \"\")","        }","        let firstName: String = valueForNames(tagname: \"first-name\", text: text)","        let lastName:  String = valueForNames(tagname: \"last-name\", text: text)","        ","        if firstName.count > 0 && lastName.count > 0 {","            workBooking.guest?.firstname = firstName","            workBooking.guest?.lastname  = lastName","            var positiveReturn = Translations().getTranslation(text: workflows[askedQuestion + 1].positiveAnswer ?? \"\")","            positiveReturn = positiveReturn.replacingOccurrences(of: \"<firstName>\", with: firstName)","            positiveReturn = positiveReturn.replacingOccurrences(of: \"<lastName>\", with: lastName)","            return positiveReturn","        }","        print(askedQuestion)","        return baseErrormessage + Translations().getTranslation(text: workflows[askedQuestion].negativeAnswer ?? \"\")","        ","    case \"hasMailaddress\":","        let mail: String = Utilities.getMailAddressFromText(text) ?? \"\"","        ..."],"fileName":"ChatController.swift","identifier":"ChatControllerTextAnalysis.swift","type":"file","fileType":"swift","highlights":[]},"TaggingExampleFile.png":{"alt":"Example of a classifier training file","type":"image","identifier":"TaggingExampleFile.png","variants":[{"url":"\/images\/TaggingExampleFile.png","traits":["1x","light"]}]},"BaseDataPlistPartview.png":{"alt":"Part view of the BaseData.plist file for workflow definitions.","type":"image","identifier":"BaseDataPlistPartview.png","variants":[{"url":"\/images\/BaseDataPlistPartview.png","traits":["1x","light"]}]},"doc://org.luenstedt.HotelChatBot/tutorials/HotelChatBot/HowToAdjust#Check-the-database-objects":{"role":"pseudoSymbol","title":"Check the database objects","abstract":[{"type":"text","text":"The following steps describe what need to do to improve the chatbot and to adjust it to own needs"},{"type":"text","text":" "},{"type":"text","text":"There are the following steps necessary:"}],"identifier":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/HotelChatBot\/HowToAdjust#Check-the-database-objects","kind":"section","type":"section","url":"\/tutorials\/hotelchatbot\/howtoadjust#Check-the-database-objects"},"doc://org.luenstedt.HotelChatBot/tutorials/Tutorial-Table-of-Contents/How-to-adjust-the-app":{"role":"article","title":"How to adjust the app","abstract":[],"identifier":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/Tutorial-Table-of-Contents\/How-to-adjust-the-app","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/how-to-adjust-the-app"},"doc://org.luenstedt.HotelChatBot/tutorials/HotelChatBot/RetrainModels":{"role":"project","title":"What to do for improving the quality of the chatbot","estimatedTime":"10min","abstract":[{"type":"text","text":"A good ML model is trained from a large set of samples. So a developer is not able to create such a hugh"},{"type":"text","text":" "},{"type":"text","text":"set. For this the app collects all the user input and creates training and testfiles when the app will terminate."},{"type":"text","text":" "},{"type":"text","text":"The disandvantage is that the end of the program is slow with a big set of data but this is only for the POC."},{"type":"text","text":" "},{"type":"text","text":"In a real world you have that in the background system and the user does not recognize that."},{"type":"text","text":" "},{"type":"text","text":"The created files can be used for retrain the models."}],"identifier":"doc:\/\/org.luenstedt.HotelChatBot\/tutorials\/HotelChatBot\/RetrainModels","kind":"project","type":"topic","url":"\/tutorials\/hotelchatbot\/retrainmodels"},"ClassifierExampleFile.png":{"alt":"Example of a classifier training file","type":"image","identifier":"ClassifierExampleFile.png","variants":[{"url":"\/images\/ClassifierExampleFile.png","traits":["1x","light"]}]},"CreateMLExample.png":{"alt":"Create ML example","type":"image","identifier":"CreateMLExample.png","variants":[{"url":"\/images\/CreateMLExample.png","traits":["1x","light"]}]},"create-ml-96x96_2x.png":{"alt":"Create ML symbol","type":"image","identifier":"create-ml-96x96_2x.png","variants":[{"url":"\/images\/create-ml-96x96_2x.png","traits":["1x","light"]}]}}}